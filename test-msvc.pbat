def qtbase672
    github_checkout()
    use(conda)
    install(mugideploy)
    install(mugicli)
    github_cache(C:\Qt\6.7.2\msvc2019_64, :k=Qt-6.7.2-msvc2019_64)
    use(ninja)
    use(cmake)
    :: where(gcc, qmake, cmake, ninja, libpq.dll, libmysql.dll)
    if_exist_return(C:\Qt\6.7.2\mingw1220_64\bin\qmake.exe)
    :: move is faster than rmdir
    move(C:\Program Files\PostgreSQL, C:\Program Files\PostgreSQL_, :github, :i)
    move(C:\Program Files\MySQL, C:\Program Files\MySQL_, :github, :i)
    move(C:\Program Files\OpenSSL, C:\Program Files\OpenSSL_, :github, :i)
    move(C:\Strawberry, C:\Strawberry_, :github, :i)
    move(C:\tools\php, C:\tools\php_, :github, :i)
    download(https://download.qt.io/official_releases/qt/6.7/6.7.2/submodules/qtbase-everywhere-src-6.7.2.zip, :cache)
    unzip(qtbase-everywhere-src-6.7.2.zip, :test=qtbase-everywhere-src-6.7.2)
    pushd qtbase-everywhere-src-6.7.2
        call_vcvars()
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=C:/Qt/6.7.2/msvc2019_64 -DQT_QMAKE_TARGET_MKSPEC=win32-msvc -DQT_BUILD_TESTS=FALSE -DQT_BUILD_EXAMPLES=FALSE -DFEATURE_system_zlib=OFF .
        :: cmake --build . --parallel --target qmake
        cmake --build . --parallel --target Qt6Core.dll
        cmake --build . --parallel --target Qt6Gui.dll
        cmake --build . --parallel --target Qt6Widgets.dll
        cmake --build . --parallel --target qmake
        pyfind -iname *.dll *.exe *.a -stat | pysort > ..\stat1.txt
        pyfind -iname *.dll *.exe *.a *.obj -stat | pysort > ..\stat2.txt
        ninja src/corelib/install
        ninja src/gui/install
        ninja src/widgets/install
        ninja qmake/install
        pyfind C:\Qt\6.7.2\msvc2019_64 > ..\listing1.txt
    popd
    add_path(C:\Qt\6.7.2\msvc2019_64\bin)
    qmake
    nmake
    pyfind -maxdepth 2 > listing2.txt
    github_upload(stat1.txt, stat2.txt, listing1.txt, listing2.txt)

def main depends on qtbase672
    echo yes

github-workflow 1